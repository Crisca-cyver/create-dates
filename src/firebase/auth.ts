import { 
  createUserWithEmailAndPassword, 
  signInWithEmailAndPassword, 
  signOut, 
  onAuthStateChanged,
  User,
  UserCredential 
} from 'firebase/auth';
import { auth } from './config';

// üîê SERVICIO DE AUTENTICACI√ìN

// Registrar nuevo usuario
export const registerUser = async (email: string, password: string): Promise<UserCredential> => {
  try {
    const userCredential = await createUserWithEmailAndPassword(auth, email, password);
    console.log('‚úÖ Usuario registrado exitosamente:', userCredential.user.email);
    return userCredential;
  } catch (error: any) {
    console.error('‚ùå Error al registrar usuario:', error.message);
    throw error;
  }
};

// Iniciar sesi√≥n
export const loginUser = async (email: string, password: string): Promise<UserCredential> => {
  try {
    const userCredential = await signInWithEmailAndPassword(auth, email, password);
    console.log('‚úÖ Usuario logueado exitosamente:', userCredential.user.email);
    return userCredential;
  } catch (error: any) {
    console.error('‚ùå Error al iniciar sesi√≥n:', error.message);
    throw error;
  }
};

// Cerrar sesi√≥n
export const logoutUser = async (): Promise<void> => {
  try {
    await signOut(auth);
    console.log('‚úÖ Usuario deslogueado exitosamente');
  } catch (error: any) {
    console.error('‚ùå Error al cerrar sesi√≥n:', error.message);
    throw error;
  }
};

// Obtener usuario actual
export const getCurrentUser = (): User | null => {
  return auth.currentUser;
};

// Escuchar cambios en el estado de autenticaci√≥n
export const onAuthStateChange = (callback: (user: User | null) => void) => {
  return onAuthStateChanged(auth, callback);
}; 